// <auto-generated />
using System;
using DDDDelivery.Infrastructure.EF.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDDelivery.Infrastructure.EF.Migrations
{
    [DbContext(typeof(DDDDeliveryContext))]
    partial class OrdersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("DDDDelivery.Infrastructure.EF.Repositories.Dtos.CustomerDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("DDDDelivery.Infrastructure.EF.Repositories.Dtos.OrderDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("TEXT");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("DDDDelivery.Infrastructure.EF.Repositories.Dtos.ProductDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Availability")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("AvailableAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("DDDDelivery.Infrastructure.EF.Repositories.Dtos.CustomerDto", b =>
                {
                    b.OwnsOne("DDDDelivery.Infrastructure.EF.Repositories.Dtos.ContactInfoDto", "PrimaryContactInfo", b1 =>
                        {
                            b1.Property<long>("CustomerDtoId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CustomerDtoId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDtoId");
                        });

                    b.OwnsOne("DDDDelivery.Infrastructure.EF.Repositories.Dtos.ContactInfoDto", "SecondaryContactInfo", b1 =>
                        {
                            b1.Property<long>("CustomerDtoId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CustomerDtoId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDtoId");
                        });

                    b.Navigation("PrimaryContactInfo")
                        .IsRequired();

                    b.Navigation("SecondaryContactInfo");
                });

            modelBuilder.Entity("DDDDelivery.Infrastructure.EF.Repositories.Dtos.OrderDto", b =>
                {
                    b.OwnsMany("DDDDelivery.Infrastructure.EF.Repositories.Dtos.OrderLineDto", "OrderLines", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("ProductId")
                                .HasColumnType("INTEGER");

                            b1.Property<ulong>("Amount")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("Discount")
                                .HasColumnType("REAL");

                            b1.Property<long>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("OrderDtoId")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("Worth")
                                .HasColumnType("REAL");

                            b1.HasKey("OrderId", "ProductId");

                            b1.HasIndex("OrderDtoId");

                            b1.HasIndex("ProductId");

                            b1.ToTable("OrderLines", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderDtoId");

                            b1.HasOne("DDDDelivery.Infrastructure.EF.Repositories.Dtos.ProductDto", null)
                                .WithMany()
                                .HasForeignKey("ProductId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();
                        });

                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
